<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) [2013] [The FURTHeR Project]

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/jee
	http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
	http://camel.apache.org/schema/spring
	http://camel.apache.org/schema/spring/camel-spring.xsd">

	<!-- =========================================== -->
	<!-- Life cycle management                       -->
	<!-- =========================================== -->

	<!-- Life cycle manager/controller -->
	<bean id="defaultCamelLifeCycleController" abstract="true"
		class="edu.utah.further.ds.jms.lifecycle.CamelLifeCycleController">
		<property name="lifeCycleMap">
			<map>
				<entry key="DATA_QUERY" value-ref="dataQueryLifeCycle" />
			</map>
		</property>
	</bean>

	<!-- =========================================== -->
	<!-- Life cycle implementation                   -->
	<!-- =========================================== -->

	<!-- Data query flow -->
	<bean id="dataQueryLifeCycle" class="edu.utah.further.ds.impl.lifecycle.DataQueryLifeCycle">
		<property name="metadataRetriever" ref="metaDataService" />
		<property name="requestProcessors">
			<list>
				<!--
					Initializer must always be the first processor to create the data
					source's query context
				-->
				<ref bean="mockInitializerQp" />
				<ref bean="randomSleep" />
				<ref bean="mockValidatorQp" />
				<ref bean="randomSleep" />
				<ref bean="mockQueryTranslatorQp" />
				<ref bean="randomSleep" />
				<ref bean="mockExecutionQp" />
				<ref bean="randomSleep" />
				<ref bean="mockResultTranslatorQp" />
				<ref bean="randomSleep" />
				<ref bean="mockFinalizerQp" />
			</list>
		</property>
	</bean>

	<!-- =========================================== -->
	<!-- Life cycle services                         -->
	<!-- =========================================== -->
	
	<!--
		Various data query and miscellaneous processors. Note: these beans
		might need be of prototype-scope if used more than once in a query
		life cycle
	-->

	<!-- Sleeps for a random number of seconds in the range [min,max] -->
	<bean id="randomSleep" scope="prototype"
		class="edu.utah.further.core.chain.RandomSleepRequestProcessor">
		<constructor-arg index="0" value="3" /> <!-- min -->
		<constructor-arg index="1" value="10" /> <!-- max -->
	</bean>

</beans>